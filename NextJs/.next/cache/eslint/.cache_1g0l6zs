[{"E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\api\\hello.js":"1","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\api\\socket.js":"2","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\bot.js":"3","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\index.js":"4","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\online.js":"5","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\single.js":"6","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\_app.js":"7","E:\\Myprojects\\full-stack\\tictactoe\\Client\\components\\Board.js":"8","E:\\Myprojects\\full-stack\\tictactoe\\Client\\components\\ScoreBoard.js":"9"},{"size":170,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":413,"mtime":1649504855056,"results":"12","hashOfConfig":"11"},{"size":5903,"mtime":1650372245014,"results":"13","hashOfConfig":"11"},{"size":1736,"mtime":1650366276049,"results":"14","hashOfConfig":"11"},{"size":7807,"mtime":1650365163552,"results":"15","hashOfConfig":"11"},{"size":4122,"mtime":1650325509235,"results":"16","hashOfConfig":"11"},{"size":137,"mtime":499162500000,"results":"17","hashOfConfig":"11"},{"size":3815,"mtime":1649698389501,"results":"18","hashOfConfig":"11"},{"size":1040,"mtime":1649028292307,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qvs0y4",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\api\\hello.js",[],[],"E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\api\\socket.js",[],[],"E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\bot.js",["51","52","53","54","55","56","57","58","59","60"],[],"import React,{useState,useEffect,useRef} from \"react\"\r\nimport Board from \"../components/Board\"\r\nimport ScoreBoard from \"../components/ScoreBoard\"\r\nimport {Howl} from \"howler\"\r\nimport Head from 'next/head'\r\nexport default function Single() {\r\n\r\n  //For all buttons\r\n  const [buttons,setButtons]=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\r\n\r\n  //To put colors and animations on endGame\r\n  const [buttonsCond,setButtonsCond]=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\r\n\r\n  //For Score...\r\n  const score1= useRef(0);\r\n  const score2= useRef(0);\r\n  const draw=useRef(0);\r\n  //The play\r\n  const [whoWon,setWhoWon] =useState(\"\");\r\n  const [botFirstTurn,setBotFirstTurn]=useState(false)\r\n\r\n  const soundPlay=(src)=>{\r\n    const sound= new Howl({\r\n      src:src,\r\n      html5:true,\r\n    })\r\n    sound.play();\r\n  }\r\n  //Check the game if someone won or...\r\n  useEffect(()=>{\r\n    let  conditions=[buttons[0]+buttons[1]+buttons[2],buttons[3]+buttons[4]+buttons[5],buttons[6]+buttons[7]+buttons[8],buttons[0]+buttons[3]+buttons[6],buttons[1]+buttons[4]+buttons[7],buttons[2]+buttons[5]+buttons[8],buttons[0]+buttons[4]+buttons[8],buttons[2]+buttons[4]+buttons[6]];\r\n    const conditionsObject={\r\n      0:[1,2,3],\r\n      1:[4,5,6],\r\n      2:[7,8,9],\r\n      3:[1,4,7],\r\n      4:[2,5,8],\r\n      5:[3,6,9],\r\n      6:[1,5,9],\r\n      7:[3,5,7]\r\n    }\r\n    for (let x in conditions){\r\n      if (conditions[x]===\"OOO\" || conditions[x]===\"XXX\"){\r\n        setWhoWon(conditions[x].charAt(0));\r\n        if (conditions[x]===\"OOO\"){score2.current++}\r\n        else{ score1.current++}\r\n        for (let btnnmb of conditionsObject[x]){\r\n          let here= buttonsCond;\r\n          here[btnnmb-1]=\"win\";\r\n          setButtonsCond([...here]);\r\n          \r\n        }\r\n        return \"\";\r\n      }\r\n    }\r\n    for(let x of conditions){\r\n      if (x.length!==3){\r\n        return \"\";\r\n      }\r\n    }\r\n    setWhoWon('draw');\r\n    draw.current++;\r\n    return \"\";\r\n  },[buttons[0]+buttons[1]+buttons[2],buttons[3]+buttons[4]+buttons[5],buttons[6]+buttons[7]+buttons[8],buttons[0]+buttons[3]+buttons[6],buttons[1]+buttons[4]+buttons[7],buttons[2]+buttons[5]+buttons[8],buttons[0]+buttons[4]+buttons[8],buttons[2]+buttons[4]+buttons[6]])\r\n  \r\n\r\n  //To decide if bot should strat first or no \r\n  useEffect(()=>{\r\n    for(let button of buttons){\r\n      if(button!=\"\"){\r\n        return \"\"\r\n      }\r\n    }\r\n    if(botFirstTurn==true){\r\n      botPlay();\r\n      setBotFirstTurn(false)\r\n    }else{\r\n      setBotFirstTurn(true)\r\n    }\r\n  \r\n  },[buttons])\r\n\r\n  //update text to buttons \r\n  function changeVal(e){\r\n    if (buttons.every((button)=>{return button!=\"\" }) || whoWon!=\"\"){\r\n      setButtons([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\r\n      setButtonsCond([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\r\n      setWhoWon(\"\")\r\n\r\n    \r\n      return \"\"\r\n    }\r\n    else if (e.target.innerHTML!==\"\"){\r\n      return \"\";\r\n    }\r\n    soundPlay(\"pop.mp3\")\r\n    changeButtonVal(e.target.id,\"X\").then(()=> setTimeout(()=> botPlay(),100))\r\n   \r\n    \r\n  }\r\n  function botPlay(){\r\n    soundPlay(\"pop.mp3\")\r\n    let  conditions=[buttons[0]+buttons[1]+buttons[2],buttons[3]+buttons[4]+buttons[5],buttons[6]+buttons[7]+buttons[8],buttons[0]+buttons[3]+buttons[6],buttons[1]+buttons[4]+buttons[7],buttons[2]+buttons[5]+buttons[8],buttons[0]+buttons[4]+buttons[8],buttons[2]+buttons[4]+buttons[6]];\r\n    const conditionsObject={\r\n      0:[1,2,3],\r\n      1:[4,5,6],\r\n      2:[7,8,9],\r\n      3:[1,4,7],\r\n      4:[2,5,8],\r\n      5:[3,6,9],\r\n      6:[1,5,9],\r\n      7:[3,5,7]\r\n    }\r\n    for(let letters of [\"OO\",\"XX\"]){\r\n      for(let condition in conditions){\r\n        if (conditions[condition]==letters){\r\n          for(let buttonnmb of conditionsObject[condition]){\r\n            if(eval(`buttons[${buttonnmb-1}]`)==\"\"){\r\n              changeButtonVal(buttonnmb,\"O\")\r\n              return \"\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (buttons==[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]){ changeButtonVal(5,\"O\")}\r\n    else {\r\n    \r\n      let randomNumber= Math.floor(Math.random() * (9 - 1 + 1) + 1)\r\n      while (buttons[randomNumber-1]!=\"\"){\r\n        randomNumber= Math.floor(Math.random() * (9 - 1 + 1) + 1);\r\n        if(buttons[randomNumber-1]==\"\" || (buttons[0]!=\"\" && buttons[1]!=\"\" && buttons[2]!=\"\" && buttons[3]!=\"\" && buttons[4]!=\"\" && buttons[5]!=\"\" && buttons[6]!=\"\" && buttons[7]!=\"\" && buttons[8]!=\"\" )){break}\r\n      }\r\n      console.log(randomNumber)\r\n      changeButtonVal(randomNumber,\"O\")\r\n    }\r\n\r\n    \r\n    \r\n    \r\n  }\r\n  async function changeButtonVal(nmb,letter){\r\n    let here = buttons;\r\n    here[ parseInt(nmb)-1]= letter;\r\n    setButtons([...here]);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n  <div className=\"bg-black h-screen flex flex-wrap user-none select-none justify-center items-center \">\r\n      <Head>\r\n        <title>Tic Tac Toe - Play Against Bot!</title>\r\n        <meta name=\"description\" content=\"Tic Tac Toe Play Against a bot- Hard level Bot!! Dont miss out the online multiplayer though ! \" />\r\n        <link rel=\"icon\" href=\"/Tic.ico\" />\r\n      </Head>\r\n      <div className=\"w-full  lg:w-1/4  xl:w-1/4 md:w-1/4 \"></div>\r\n      <div className=\"w-full  lg:w-2/4  xl:w-2/4 md:w-2/4  \">\r\n        \r\n        <Board whoWon={whoWon} button1Cond={buttonsCond[0]} button2Cond={buttonsCond[1]} button3Cond={buttonsCond[2]}  button4Cond={buttonsCond[3]} button5Cond={buttonsCond[4]} button6Cond={buttonsCond[5]} button7Cond={buttonsCond[6]} button8Cond={buttonsCond[7]} button9Cond={buttonsCond[8]} button1={buttons[0]} button2={buttons[1]} button3={buttons[2]} button4={buttons[3]} button5={buttons[4]} button6={buttons[5]} button7={buttons[6]} button8={buttons[7]}  button9={buttons[8]}  changeVal={changeVal}/>\r\n        <ScoreBoard player1=\"Player 1(X)\" player2=\"Computer (O)\" score1={score1.current} draw={draw.current} score2={score2.current} whoWon={whoWon}/>\r\n      </div>\r\n      \r\n      <div className=\"w-full  lg:w-1/4  md:w-1/4 xl:w-1/4\"></div>\r\n  </div>\r\n\r\n  );\r\n}","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\index.js",["61"],[],"import Head from 'next/head'\nimport Link from 'next/link'\nimport React,{useEffect} from 'react'\nimport {Howl} from \"howler\"\nexport default function Home() {\n\n  return (\n    <div className=\"w-full h-full  bg-black background-black\">\n      <Head>\n        <title>Tic Tac Toe - PLay Now!</title>\n        <meta name=\"description\" content=\"Tic Tac Toe game - Play against a bot,player2, or even a friend online! The One Who loses always starts the game!  @ahmad\" />\n        <link rel=\"icon\" href=\"/Tic.ico\" />\n      </Head>\n\n      <main className=' h-screen'>\n        \n        <div className='text-white h-screen flex flex-col justify-center  items-center'>\n          <p className='text-center text-white text-7xl font-bold mb-4 fontT'>Tic Tac Toe</p>\n          <p className='text-white text-center text-xs md:text-base fontT mb-4'>The one who loses always starts the game!</p>\n          <ButtonMode title=\"Local Multiplayer\" href=\"/single\"/>\n          <ButtonMode title=\"Bot\" href=\"bot\"/>\n          <ButtonMode title=\"Online Multiplayer\" online=\".\" href=\"/online\" />\n         \n\n        </div>\n\n      </main>\n      <footer className='border-t-2 border-gray-300 mx-8 flex justify-center items-center'>\n        <a href=\"https://ahmadmaaz.herokuapp.com/\" className='text-center text-white text-4xl fontT my-6 cursor-pointer hover:opacity-60'>@Ahmad </a>\n      </footer>\n\n    </div>\n  )\n}\n\nfunction ButtonMode(props){\n  return (\n    <Link href={props.href}  >\n      <button className={` w-9/12  lg:w-4/12 text-center py-4 px-8 my-4 fontT text-3xl md:text-4xl rounded-xl border-2 border-white  ${props.online ? \"shadow-2xl  shadow-red-400\" : \"shadow-inner shadow-white\"} hover:text-black hover:bg-white `} >{props.title}</button>\n    </Link>\n  )\n}","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\online.js",["62","63","64","65","66","67","68","69","70"],[],"import React, {useEffect,useState} from \"react\";\r\nimport  io  from \"socket.io-client\";\r\nimport Board from \"../components/Board\";\r\nimport ScoreBoard from \"../components/ScoreBoard\";\r\nimport Head from 'next/head';\r\nimport {Howl} from \"howler\"\r\n//const socket = io(\"http://localhost:3050/\");\r\nconst socket = io(\"https://socketio-xoserver.herokuapp.com/\");\r\n\r\n\r\nvar turn=false;\r\nvar score1=0;\r\nvar draw=0;\r\nvar score2=0;\r\nfunction Online() {\r\n    \r\n    const [button1,setButton1]=useState(\"\");\r\n    const [button2,setButton2]=useState(\"\");\r\n    const [button3,setButton3]=useState(\"\");\r\n    const [button4,setButton4]=useState(\"\");\r\n    const [button5,setButton5]=useState(\"\");\r\n    const [button6,setButton6]=useState(\"\");\r\n    const [button7,setButton7]=useState(\"\");\r\n    const [button8,setButton8]=useState(\"\");\r\n    const [button9,setButton9]=useState(\"\");\r\n    const [buttonCond1,setButtonCond1]=useState(\"\");\r\n    const [buttonCond2,setButtonCond2]=useState(\"\");\r\n    const [buttonCond3,setButtonCond3]=useState(\"\");\r\n    const [buttonCond4,setButtonCond4]=useState(\"\");\r\n    const [buttonCond5,setButtonCond5]=useState(\"\");\r\n    const [buttonCond6,setButtonCond6]=useState(\"\");\r\n    const [buttonCond7,setButtonCond7]=useState(\"\");\r\n    const [buttonCond8,setButtonCond8]=useState(\"\");\r\n    const [buttonCond9,setButtonCond9]=useState(\"\");\r\n    \r\n    \r\n    \r\n\r\n    const [createRoomBool,setCreateRoomBool]=useState(false);\r\n    const [room,setRoom]= useState(\"\");\r\n    const [playerName1,setPlayerName1]=useState(\"\");\r\n    const [playerName2,setPlayerName2]=useState(\"\");\r\n    const [waitingForPlayer,setWaitingForPlayer]=useState(true);\r\n    const [turnText,setTurnText]= useState(\"Opponent's Turn\");\r\n    \r\n    \r\n    \r\n\r\n\r\n  \r\n\r\n\r\n    //The play\r\n    const [playing,setPlaying]= useState(\"\");\r\n    const [whoWon,setWhoWon] =useState(\"\");\r\n    const soundPlay=(src)=>{\r\n      const sound= new Howl({\r\n        src:src,\r\n        html5:true,\r\n      })\r\n      sound.play();\r\n    }\r\n\r\n    useEffect(() => {\r\n      \r\n      socket.on(\"connection\", (arg)=>{\r\n          console.log(\"hey\")\r\n      })\r\n      socket.on(\"reset\",(arg)=>{\r\n        for(let i=1;i<10;i++){\r\n          console.log(i)\r\n          eval(`setButton${i}(\"\")`)\r\n          eval(`setButtonCond${i}(\"\")`)\r\n        }\r\n        setWhoWon(\"\")\r\n\r\n      })\r\n      socket.on(\"play\",(nmb,playing)=>{\r\n        soundPlay(\"pop.mp3\")\r\n        eval(`setButton${nmb}(\"${playing}\")`)\r\n        if (turn==false){turn=true; setTurnText(\"Your Turn\")}\r\n        else{turn=false; setTurnText(\"Opponent's Turn\")}\r\n      });\r\n      socket.on(\"playerJoined\",(arg)=>{\r\n\r\n        setWaitingForPlayer(false)\r\n      })\r\n\r\n      \r\n  \r\n    },[]);\r\n    \r\n    //Check the game if someone won or...\r\n    useEffect(()=>{\r\n      \r\n      let  conditions=[button1+button2+button3,button4+button5+button6,button7+button8+button9,button1+button4+button7,button2+button5+button8,button3+button6+button9,button1+button5+button9,button3+button5+button7]\r\n      const conditionsObject={\r\n        0:[1,2,3],\r\n        1:[4,5,6],\r\n        2:[7,8,9],\r\n        3:[1,4,7],\r\n        4:[2,5,8],\r\n        5:[3,6,9],\r\n        6:[1,5,9],\r\n        7:[3,5,7]\r\n      }\r\n      if(whoWon==\"\"){\r\n        for (let x in conditions){\r\n          if (conditions[x]===\"OOO\" || conditions[x]===\"XXX\"){\r\n            \r\n            setWhoWon(conditions[x].charAt(0));\r\n            if (conditions[x]===\"OOO\"){score2++}\r\n            else{ score1++}\r\n            for (let btnnmb of conditionsObject[x]){\r\n              eval(`setButtonCond${btnnmb}(\"win\")`)\r\n            }\r\n            return \"\";\r\n          }\r\n        }\r\n        for(let x of conditions){\r\n          if (x.length!=3){\r\n            return \"\";\r\n          }\r\n        }\r\n        setWhoWon('draw');\r\n        draw++;\r\n        return \"\";\r\n      }\r\n    },[button1+button2+button3,button4+button5+button6,button7+button8+button9,button1+button4+button7,button2+button5+button8,button3+button6+button9,button1+button5+button9,button3+button5+button7])\r\n    //update text to buttons \r\n  \r\n\r\n    function changeVal(e){\r\n      if ([button1,button2,button3,button4,button5,button6,button7,button8,button9].every((button)=>{return button!=\"\" }) || whoWon!=\"\"){\r\n        socket.emit(\"reset\",\"now\");\r\n        return \"\"\r\n      }\r\n      else if (e.target.innerHTML!==\"\"){\r\n        return \"\";\r\n      }\r\n      else if (turn==false){\r\n        return \"\";\r\n      }\r\n      else{\r\n        socket.emit(\"play\",e.target.id,playing)\r\n      }\r\n\r\n    }\r\n    function joinRoom(e){\r\n      e.preventDefault();\r\n      if(room!=\"\" && playerName1!=\"\"){\r\n        socket.emit(\"create\",room,playerName1)\r\n        setCreateRoomBool(true) \r\n        socket.on(\"XorO\",(arg,player1,player2)=>{\r\n          if (playing==\"\"){setPlaying(arg)}\r\n          if (arg==\"X\"){turn=true;setTurnText(\"Your Turn\")}\r\n\r\n          setPlayerName1(player1);\r\n          setPlayerName2(player2)\r\n        })\r\n      }\r\n\r\n\r\n    }\r\n\r\n           \r\n\r\n  return (\r\n    <div className=\"bg-black h-screen flex flex-wrap user-none select-none justify-center items-center \">\r\n      <Head>\r\n        <title>Tic Tac Toe - Online !</title>\r\n        <meta name=\"description\" content=\"Tic Tac Toe Online - Play against a friend online with an easy room setup. @ahmad\" />\r\n        <link rel=\"icon\" href=\"/Tic.ico\" />\r\n      </Head>\r\n          <div className=\"w-full  lg:w-1/4  xl:w-1/4 md:w-1/4 \"></div>\r\n          <div className=\"w-full  lg:w-2/4  xl:w-2/4 md:w-2/4  \">\r\n            {createRoomBool \r\n              ?\r\n                <div>\r\n                   \r\n                  {waitingForPlayer \r\n                    ? \r\n                    <div>\r\n                      <p className=\"fontT text-xl text-center text-white \"> Room Name: {room}</p>\r\n                      <p className=\"text-white text-xl fontT text-center animate-pulse mb-4\"> Waiting for the other player .  .  .   </p> \r\n                    </div>\r\n                    : \r\n                    <p className=\"text-white text-xl fontT text-center animate-pulse\"> {turnText}</p> \r\n\r\n                  }\r\n                    \r\n                    <Board waitingForPlayer={waitingForPlayer} whoWon={whoWon} button1Cond={buttonCond1} button2Cond={buttonCond2} button3Cond={buttonCond3}  button4Cond={buttonCond4} button5Cond={buttonCond5} button6Cond={buttonCond6} button7Cond={buttonCond7} button8Cond={buttonCond8} button9Cond={buttonCond9} button1={button1} button2={button2} button3={button3} button4={button4} button5={button5} button6={button6} button7={button7} button8={button8}  button9={button9}  changeVal={changeVal}/>\r\n                    <ScoreBoard player1={playerName1+\"(X)\"} player2={playerName2+\"(O)\"} score1={score1} draw={draw} score2={score2} whoWon={whoWon}/>\r\n                  </div>\r\n\r\n              : \r\n              <div>\r\n                <form onSubmit={joinRoom} className=\"flex flex-col justify-center items-center gap-8\">\r\n                  <p className='text-center text-white text-5xl font-bold  fontT'>Tic Tac Toe Online </p>\r\n                  <input  onChange={(e)=> setRoom(e.target.value)} placeholder=\"Create or Enter Your room Code\"  className=\"w-72 bg-transparent text-white border-2 border-white px-4 py-2 rounded-xl fontT\"/>\r\n                  <input  onChange={(e)=> setPlayerName1(e.target.value)} placeholder=\"Enter Your Name\"  className=\"w-72 bg-transparent text-white border-2 border-white px-4 py-2 rounded-xl fontT \"/>\r\n                  <input type=\"submit\" value=\"Create / Join\"  className=\"text-white fontT border-2 border-white rounded-2xl px-4 py-2 hover:bg-white hover:text-black cursor-pointer \"/>\r\n                </form>\r\n              </div>\r\n            }\r\n            \r\n          </div>\r\n          \r\n          <div className=\"w-full  lg:w-1/4  md:w-1/4 xl:w-1/4\"></div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Online;","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\single.js",["71","72","73","74","75","76","77","78","79"],[],"import React,{useState,useEffect,useRef} from \"react\"\r\nimport Board from \"../components/Board\"\r\nimport Head from 'next/head'\r\nimport ScoreBoard from \"../components/ScoreBoard\"\r\nimport {Howl} from \"howler\";\r\nexport default function Single() {\r\n\r\n  //For all buttons\r\n  const [buttons,setButtons]=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\r\n\r\n  //To put colors and animations on endGame\r\n  const [buttonsCond,setButtonsCond]=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\r\n\r\n  //For Score...\r\n  const score1= useRef(0);\r\n  const score2= useRef(0);\r\n  const draw=useRef(0);\r\n  //The play\r\n  const [playing,setPlaying]= useState(\"X\");\r\n  const [whoWon,setWhoWon] =useState(\"\");\r\n  const soundPlay=(src)=>{\r\n    const sound= new Howl({\r\n      src:src,\r\n      html5:true,\r\n    })\r\n    sound.play();\r\n  }\r\n  //Check the game if someone won or...\r\n  useEffect(()=>{\r\n    let  conditions=[buttons[0]+buttons[1]+buttons[2],buttons[3]+buttons[4]+buttons[5],buttons[6]+buttons[7]+buttons[8],buttons[0]+buttons[3]+buttons[6],buttons[1]+buttons[4]+buttons[7],buttons[2]+buttons[5]+buttons[8],buttons[0]+buttons[4]+buttons[8],buttons[2]+buttons[4]+buttons[6]];\r\n    const conditionsObject={\r\n      0:[1,2,3],\r\n      1:[4,5,6],\r\n      2:[7,8,9],\r\n      3:[1,4,7],\r\n      4:[2,5,8],\r\n      5:[3,6,9],\r\n      6:[1,5,9],\r\n      7:[3,5,7]\r\n    }\r\n    for (let x in conditions){\r\n      if (conditions[x]===\"OOO\" || conditions[x]===\"XXX\"){\r\n        setWhoWon(conditions[x].charAt(0));\r\n        if (conditions[x]===\"OOO\"){score2.current++}\r\n        else{ score1.current++}\r\n        for (let btnnmb of conditionsObject[x]){\r\n          let here= buttonsCond;\r\n          here[btnnmb-1]=\"win\";\r\n          setButtonsCond([...here]);\r\n        }\r\n        return \"\";\r\n      }\r\n    }\r\n    for(let x of conditions){\r\n      if (x.length!==3){\r\n        return \"\";\r\n      }\r\n    }\r\n    setWhoWon('draw');\r\n    draw.current++;\r\n    return \"\";\r\n  },[buttons[0]+buttons[1]+buttons[2],buttons[3]+buttons[4]+buttons[5],buttons[6]+buttons[7]+buttons[8],buttons[0]+buttons[3]+buttons[6],buttons[1]+buttons[4]+buttons[7],buttons[2]+buttons[5]+buttons[8],buttons[0]+buttons[4]+buttons[8],buttons[2]+buttons[4]+buttons[6]])\r\n  //update text to buttons \r\n\r\n  function changeVal(e){\r\n    if (buttons.every((button)=>{return button!=\"\" }) || whoWon!=\"\"){\r\n      setButtons([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\r\n      setButtonsCond([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\r\n      setWhoWon(\"\")\r\n      return \"\"\r\n    }\r\n    else if (e.target.innerHTML!==\"\"){\r\n      return \"\";\r\n    }\r\n    soundPlay(\"pop.mp3\")\r\n    let here = buttons;\r\n    here[ parseInt(e.target.id)-1]= playing;\r\n    setButtons([...here]);\r\n    if (playing==='X'){setPlaying(\"O\")}\r\n    else{setPlaying(\"X\")}\r\n  }\r\n\r\n  return (\r\n\r\n  <div className=\"bg-black h-screen flex flex-wrap user-none select-none justify-center items-center \">\r\n      <Head>\r\n        <title>Tic Tac Toe - Local Multiplayer</title>\r\n        <meta name=\"description\" content=\"Tic Tac Toe Local multiplayer- 2 players -The one Who Loses always starts the game !! \" />\r\n        <link rel=\"icon\" href=\"/Tic.ico\" />\r\n      </Head>\r\n          <div className=\"w-full  lg:w-1/4  xl:w-1/4 md:w-1/4 \"></div>\r\n          <div className=\"w-full  lg:w-2/4  xl:w-2/4 md:w-2/4  \">\r\n            <p className=\"text-white text-3xl fontT text-center animate-pulse mb-4\">{playing} turn </p>\r\n            <Board whoWon={whoWon} button1Cond={buttonsCond[0]} button2Cond={buttonsCond[1]} button3Cond={buttonsCond[2]}  button4Cond={buttonsCond[3]} button5Cond={buttonsCond[4]} button6Cond={buttonsCond[5]} button7Cond={buttonsCond[6]} button8Cond={buttonsCond[7]} button9Cond={buttonsCond[8]} button1={buttons[0]} button2={buttons[1]} button3={buttons[2]} button4={buttons[3]} button5={buttons[4]} button6={buttons[5]} button7={buttons[6]} button8={buttons[7]}  button9={buttons[8]}  changeVal={changeVal}/>\r\n            <ScoreBoard player1=\"Player 1(X)\" player2=\"Player 2(O)\" score1={score1.current} draw={draw.current} score2={score2.current} whoWon={whoWon}/>\r\n          </div>\r\n          \r\n          <div className=\"w-full  lg:w-1/4  md:w-1/4 xl:w-1/4\"></div>\r\n  </div>\r\n\r\n  );\r\n}","E:\\Myprojects\\full-stack\\tictactoe\\Client\\pages\\_app.js",[],[],"E:\\Myprojects\\full-stack\\tictactoe\\Client\\components\\Board.js",[],[],"E:\\Myprojects\\full-stack\\tictactoe\\Client\\components\\ScoreBoard.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":64,"column":5,"nodeType":"82","endLine":64,"endColumn":270,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":64,"column":6,"nodeType":"85","endLine":64,"endColumn":38},{"ruleId":"80","severity":1,"message":"84","line":64,"column":39,"nodeType":"85","endLine":64,"endColumn":71},{"ruleId":"80","severity":1,"message":"84","line":64,"column":72,"nodeType":"85","endLine":64,"endColumn":104},{"ruleId":"80","severity":1,"message":"84","line":64,"column":105,"nodeType":"85","endLine":64,"endColumn":137},{"ruleId":"80","severity":1,"message":"84","line":64,"column":138,"nodeType":"85","endLine":64,"endColumn":170},{"ruleId":"80","severity":1,"message":"84","line":64,"column":171,"nodeType":"85","endLine":64,"endColumn":203},{"ruleId":"80","severity":1,"message":"84","line":64,"column":204,"nodeType":"85","endLine":64,"endColumn":236},{"ruleId":"80","severity":1,"message":"84","line":64,"column":237,"nodeType":"85","endLine":64,"endColumn":269},{"ruleId":"80","severity":1,"message":"86","line":81,"column":5,"nodeType":"82","endLine":81,"endColumn":14,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":38,"column":5,"nodeType":"90","endLine":38,"endColumn":31},{"ruleId":"80","severity":1,"message":"91","line":129,"column":7,"nodeType":"82","endLine":129,"endColumn":200,"suggestions":"92"},{"ruleId":"80","severity":1,"message":"84","line":129,"column":8,"nodeType":"85","endLine":129,"endColumn":31},{"ruleId":"80","severity":1,"message":"84","line":129,"column":32,"nodeType":"85","endLine":129,"endColumn":55},{"ruleId":"80","severity":1,"message":"84","line":129,"column":56,"nodeType":"85","endLine":129,"endColumn":79},{"ruleId":"80","severity":1,"message":"84","line":129,"column":80,"nodeType":"85","endLine":129,"endColumn":103},{"ruleId":"80","severity":1,"message":"84","line":129,"column":104,"nodeType":"85","endLine":129,"endColumn":127},{"ruleId":"80","severity":1,"message":"84","line":129,"column":128,"nodeType":"85","endLine":129,"endColumn":151},{"ruleId":"80","severity":1,"message":"84","line":129,"column":152,"nodeType":"85","endLine":129,"endColumn":175},{"ruleId":"80","severity":1,"message":"84","line":129,"column":176,"nodeType":"85","endLine":129,"endColumn":199},{"ruleId":"80","severity":1,"message":"81","line":62,"column":5,"nodeType":"82","endLine":62,"endColumn":270,"suggestions":"93"},{"ruleId":"80","severity":1,"message":"84","line":62,"column":6,"nodeType":"85","endLine":62,"endColumn":38},{"ruleId":"80","severity":1,"message":"84","line":62,"column":39,"nodeType":"85","endLine":62,"endColumn":71},{"ruleId":"80","severity":1,"message":"84","line":62,"column":72,"nodeType":"85","endLine":62,"endColumn":104},{"ruleId":"80","severity":1,"message":"84","line":62,"column":105,"nodeType":"85","endLine":62,"endColumn":137},{"ruleId":"80","severity":1,"message":"84","line":62,"column":138,"nodeType":"85","endLine":62,"endColumn":170},{"ruleId":"80","severity":1,"message":"84","line":62,"column":171,"nodeType":"85","endLine":62,"endColumn":203},{"ruleId":"80","severity":1,"message":"84","line":62,"column":204,"nodeType":"85","endLine":62,"endColumn":236},{"ruleId":"80","severity":1,"message":"84","line":62,"column":237,"nodeType":"85","endLine":62,"endColumn":269},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'buttons' and 'buttonsCond'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression","React Hook useEffect has missing dependencies: 'botFirstTurn' and 'botPlay'. Either include them or remove the dependency array.",["95"],"@next/next/link-passhref","passHref is missing. See: https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement","React Hook useEffect has missing dependencies: 'button1', 'button2', 'button3', 'button4', 'button5', 'button6', 'button7', 'button8', 'button9', and 'whoWon'. Either include them or remove the dependency array.",["96"],["97"],{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"98","fix":"104"},"Update the dependencies array to be: [buttons, buttonsCond]",{"range":"105","text":"106"},"Update the dependencies array to be: [botFirstTurn, botPlay, buttons]",{"range":"107","text":"108"},"Update the dependencies array to be: [button1, button2, button3, button4, button5, button6, button7, button8, button9, whoWon]",{"range":"109","text":"110"},{"range":"111","text":"106"},[1922,2187],"[buttons, buttonsCond]",[2487,2496],"[botFirstTurn, botPlay, buttons]",[3799,3992],"[button1, button2, button3, button4, button5, button6, button7, button8, button9, whoWon]",[1899,2164]]